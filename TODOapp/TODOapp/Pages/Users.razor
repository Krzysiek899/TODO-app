@page "/users"
@layout AdminLayout
@inject UserService _userService

<PageTitle>Users</PageTitle>

<div class="container">
    @foreach (var user in users)
    {
        <div class="card mb-3">
            <div class="card-body">
                <div class="row">
                    <div class="col">
                        <h4>@user.UserName</h4>
                        <h5 class="text-secondary">@user.Role</h5>
                    </div>
                    @if (user.Role == "Admin") {
                        <div class="col-2">
                            <button type="button" class="btn btn-info mt-2" @onclick="@(() => DemoteUser(user.UserId))">
                                <span class="oi oi-shield" aria-hidden="true"></span> Demote to User
                            </button>
                        </div>
                    } else {
                        <div class="col-2">
                            <button type="button" class="btn btn-info mt-2" @onclick="@(() => PromoteUser(user.UserId))">
                                <span class="oi oi-shield" aria-hidden="true"></span> Promote to Admin
                            </button>
                        </div>
                    }
                    <div class="col-2">
                        <button type="button" class="btn btn-danger mt-2 ms-5" @onclick="@(() => Delete(user.UserId))">
                            <span class="oi oi-trash" aria-hidden="true"></span> Delete
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>


@code {
    private List<UserWithRole> users = new List<UserWithRole>();

    protected override async Task OnInitializedAsync() {
        await UpdateView();
    }

    private async Task Delete(Guid userId) {
        await _userService.DeleteUserAsync(userId);
        await UpdateView();
    }

    private async Task UpdateView() {
        users = await _userService.GetUsersAsync();
    }

    private async Task PromoteUser(Guid userId) {
        await _userService.SetUserAsAdminAsync(userId);
        await UpdateView();
    }

    private async Task DemoteUser(Guid userId) {
        await _userService.SetAdminAsUserAsync(userId);
        await UpdateView();
    }
}